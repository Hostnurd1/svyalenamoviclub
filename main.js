// ==== Firebase init ====
const firebaseConfig = {
  apiKey: "AIzaSyAxLMSDQSPon7NTd9loVRMLNCseBFSOTDc",
  authDomain: "movieclub-aba80.firebaseapp.com",
  projectId: "movieclub-aba80",
  storageBucket: "movieclub-aba80.appspot.com",
  messagingSenderId: "747897349535",
  appId: "1:747897349535:web:bd29be3880dbcffac749aa",
  measurementId: "G-LQ40KH85NE"
};
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// ==== –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ====
let currentUser = localStorage.getItem('mc_user') || '';

function chooseUser(user, fromModal = false) {
  currentUser = user;
  localStorage.setItem('mc_user', user);
  highlightUserBtn();
  if (fromModal) {
    document.getElementById('user-modal').style.display = 'none';
    document.querySelector('.container').style.filter = '';
    document.querySelector('.container').style.pointerEvents = '';
    loadMovies();
  }
}

function highlightUserBtn() {
  const btnS = document.getElementById('btn-svyat');
  const btnA = document.getElementById('btn-alena');
  if (btnS && btnA) {
    if (currentUser === '–°–≤—è—Ç') {
      btnS.classList.add('active');
      btnA.classList.remove('active');
    } else if (currentUser === '–ê–ª—ë–Ω–∞') {
      btnA.classList.add('active');
      btnS.classList.remove('active');
    } else {
      btnS.classList.remove('active');
      btnA.classList.remove('active');
    }
  }
}

// ==== –ú–æ–¥–∞–ª–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ====
window.onload = function () {
  if (!currentUser) {
    document.getElementById('user-modal').style.display = 'flex';
    document.querySelector('.container').style.filter = 'blur(5px)';
    document.querySelector('.container').style.pointerEvents = 'none';
  } else {
    document.getElementById('user-modal').style.display = 'none';
    document.querySelector('.container').style.filter = '';
    document.querySelector('.container').style.pointerEvents = '';
    highlightUserBtn();
    loadMovies();
  }
}

// ==== –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º ====
async function addMovie() {
  const title = document.getElementById('new-movie-title').value.trim();
  if (!title || !currentUser) return;
  await db.collection('movies').add({
    title: title,
    status: '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω',
    date: new Date().toISOString(),
    addedBy: currentUser,
    scoreSvyat: null,
    scoreAlena: null,
    commentSvyat: '',
    commentAlena: '',
    emojiSvyat: '',
    emojiAlena: '',
    confirmedSvyat: false,
    confirmedAlena: false
  });
  document.getElementById('new-movie-title').value = '';
  loadMovies();
}

// ==== –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ ====
async function loadMovies() {
  const res = await db.collection('movies').orderBy('date', 'desc').get();
  let html = '';
  res.forEach(doc => {
    const m = doc.data();
    // –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–æ–¥ –¥–ª—è "–¥–æ–±–∞–≤–∏–ª/–¥–æ–±–∞–≤–∏–ª–∞"
    let verb = (m.addedBy === '–ê–ª—ë–Ω–∞') ? '–¥–æ–±–∞–≤–∏–ª–∞' : '–¥–æ–±–∞–≤–∏–ª';
    // –∫—Ç–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ—Ü–µ–Ω–∫—É
    let needA = !m.confirmedAlena ? '<span style="color:#fb3640; font-size:13px;">–ê–ª—ë–Ω–∞ –µ—â—ë –Ω–µ –æ—Ü–µ–Ω–∏–ª–∞</span>' : '';
    let needS = !m.confirmedSvyat ? '<span style="color:#fb3640; font-size:13px;">–°–≤—è—Ç –µ—â—ë –Ω–µ –æ—Ü–µ–Ω–∏–ª</span>' : '';
    // disable —á—É–∂–∏—Ö –ø–æ–ª–µ–π
    let disableS = (currentUser !== '–°–≤—è—Ç' || m.confirmedSvyat) ? 'disabled' : '';
    let disableA = (currentUser !== '–ê–ª—ë–Ω–∞' || m.confirmedAlena) ? 'disabled' : '';

    html += `<li class="movie">
      <div class="movie-title">${m.title} <span class="mini">(${m.status || ''})</span></div>
      <div class="mini">${verb}: ${m.addedBy || '-'}</div>
      <div>
        <b>–°–≤—è—Ç:</b>
        <input type="number" min="1" max="10" value="${m.scoreSvyat ?? ''}" 
          onchange="setScore('${doc.id}','–°–≤—è—Ç',this.value)" ${disableS} style="width:34px">
        <input type="text" maxlength="2" placeholder="üòä" value="${m.emojiSvyat || ''}" 
          onchange="setEmoji('${doc.id}','–°–≤—è—Ç',this.value)" ${disableS} style="width:34px">
        <input type="text" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" value="${m.commentSvyat || ''}" 
          onchange="setComment('${doc.id}','–°–≤—è—Ç',this.value)" ${disableS} style="width:90px">
        ${!m.confirmedSvyat && currentUser === '–°–≤—è—Ç' ? `<button onclick="confirmReview('${doc.id}','–°–≤—è—Ç')" style="margin-left:5px;">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>` : ''}
        ${needS && m.confirmedAlena ? needS : ''}
      </div>
      <div>
        <b>–ê–ª—ë–Ω–∞:</b>
        <input type="number" min="1" max="10" value="${m.scoreAlena ?? ''}" 
          onchange="setScore('${doc.id}','–ê–ª—ë–Ω–∞',this.value)" ${disableA} style="width:34px">
        <input type="text" maxlength="2" placeholder="üòç" value="${m.emojiAlena || ''}" 
          onchange="setEmoji('${doc.id}','–ê–ª—ë–Ω–∞',this.value)" ${disableA} style="width:34px">
        <input type="text" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" value="${m.commentAlena || ''}" 
          onchange="setComment('${doc.id}','–ê–ª—ë–Ω–∞',this.value)" ${disableA} style="width:90px">
        ${!m.confirmedAlena && currentUser === '–ê–ª—ë–Ω–∞' ? `<button onclick="confirmReview('${doc.id}','–ê–ª—ë–Ω–∞')" style="margin-left:5px;">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>` : ''}
        ${needA && m.confirmedSvyat ? needA : ''}
      </div>
      <b>–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${
        (m.scoreSvyat && m.scoreAlena) 
          ? ((Number(m.scoreSvyat)+Number(m.scoreAlena))/2).toFixed(1) 
          : '-'
      }</b>
    </li>`;
  });
  document.getElementById('movie-list').innerHTML = html;
}

// ==== –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, —ç–º–æ–¥–∑–∏ ====
async function setScore(id, user, value) {
  const field = user === '–°–≤—è—Ç' ? 'scoreSvyat' : 'scoreAlena';
  await db.collection('movies').doc(id).update({ [field]: Number(value) });
  loadMovies();
}
async function setComment(id, user, value) {
  const field = user === '–°–≤—è—Ç' ? 'commentSvyat' : 'commentAlena';
  await db.collection('movies').doc(id).update({ [field]: value });
  loadMovies();
}
async function setEmoji(id, user, value) {
  const field = user === '–°–≤—è—Ç' ? 'emojiSvyat' : 'emojiAlena';
  await db.collection('movies').doc(id).update({ [field]: value });
  loadMovies();
}

// ==== –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ ====
async function confirmReview(id, user) {
  const field = user === '–°–≤—è—Ç' ? 'confirmedSvyat' : 'confirmedAlena';
  await db.collection('movies').doc(id).update({ [field]: true });
  loadMovies();
}

// ==== –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä ====
async function randomMovie() {
  const res = await db.collection('movies').where('status','==','–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω').get();
  const arr = [];
  res.forEach(doc => arr.push(doc.data()));
  if (arr.length === 0) {
    document.getElementById('random-out').innerText = '–ù–µ—Ç —Ñ–∏–ª—å–º–æ–≤ –≤ –ø–ª–∞–Ω–∞—Ö!';
    return;
  }
  const rnd = arr[Math.floor(Math.random()*arr.length)];
  document.getElementById('random-out').innerHTML = `üé¨ –í–∞—à –≤—ã–±–æ—Ä: <b>${rnd.title}</b>`;
}
